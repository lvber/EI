<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:ns2="http://xmlns.tibco.com/bw/activity/xml/render/bytesEnvelope/2003/05" xmlns:pd="http://xmlns.tibco.com/bw/process/2003" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns="http://www.tibco.com/namespaces/tnt/plugins/json" xmlns:ns3="http://xmlns.tibco.com/body" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:pfx5="http://www.tibco.com/ns/no_namespace_schema_location/Integration Middleware/modified_application.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:pfx4="http://ws.apache.org/axis2" xmlns:pfx3="http://www.tibco.com/ns/no_namespace_schema_location/Integration Middleware/application.xsd" xmlns:pfx2="http://www.tibco.com/namespaces/tnt/plugins/mail" xmlns:pfx="http://www.tibco.com/namespaces/tnt/plugins/jms" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Integration Middleware/application.xsd" schemaLocation="/Integration Middleware/application.xsd"/>
    <xsd:import namespace="http://www.tibco.com/ns/no_namespace_schema_location/Integration Middleware/modified_application.xsd" schemaLocation="/Integration Middleware/modified_application.xsd"/>
    <wsdl:import namespace="http://ws.apache.org/axis2" location="/Integration Middleware/GetAssessmentResult.wsdl"/>
    <pd:name>Integration Middleware/Main Process.process</pd:name>
    <pd:startName>Check expire candidates</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="Check expire candidates">
        <pd:type>com.tibco.plugin.jms.JMSQueueEventSource</pd:type>
        <pd:resourceType>ae.activities.JMSQueueEventSource</pd:resourceType>
        <pd:x>81</pd:x>
        <pd:y>203</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>q.application</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Integration Middleware/AESchemas/JMS Connection.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>1187</pd:endX>
    <pd:endY>206</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1456319367318</pd:targetNamespace>
    <pd:activity name="Invoke REST API(Send HTTP Request to LTA)">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>396</pd:x>
        <pd:y>132</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>GET</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <restURI>http://localhost:8084/LTAws/json</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="licencePlate" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <ns:Parameters>
                    <Query>
                        <licencePlate>
                            <xsl:value-of select="$Parse-Application-form/application/licencePlate"/>
                        </licencePlate>
                    </Query>
                </ns:Parameters>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse offence result">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>546</pd:x>
        <pd:y>124</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ValidateOutputEnable>true</ValidateOutputEnable>
            <ActivityOutputEditor>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="result" type="xsd:string"/>
                            <xsd:element name="status" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityOutputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Invoke-REST-APISend-HTTP-Request-to-LTA/ns:RESTOutput/msg"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse Driving Logs">
        <pd:type>com.tibco.plugin.json.activities.JSONParserActivity</pd:type>
        <pd:resourceType>ae.activities.JSONParserActivity</pd:resourceType>
        <pd:x>560</pd:x>
        <pd:y>312</pd:y>
        <config>
            <SchemaType>xsdType</SchemaType>
            <BadgerfishCheck>false</BadgerfishCheck>
            <ValidateOutputEnable>true</ValidateOutputEnable>
            <ActivityOutputEditor>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="result" type="xsd:string"/>
                            <xsd:element name="status" type="xsd:string"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </ActivityOutputEditor>
        </config>
        <pd:inputBindings>
            <ns:ActivityInputClass>
                <jsonString>
                    <xsl:value-of select="$Invoke-REST-API-OBD-ws/ns:RESTOutput/msg"/>
                </jsonString>
            </ns:ActivityInputClass>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Invoke REST API (OBD ws)">
        <pd:type>com.tibco.plugin.json.activities.RestActivity</pd:type>
        <pd:resourceType>ae.activities.RestActivity</pd:resourceType>
        <pd:x>400</pd:x>
        <pd:y>319</pd:y>
        <config>
            <enableProtocolUI>None</enableProtocolUI>
            <restMethodUI>GET</restMethodUI>
            <restResponseType>JSON</restResponseType>
            <authChoiceUI>No Authentication</authChoiceUI>
            <WADLPaths/>
            <WADLBaseURL/>
            <restMethodIDUI/>
            <restURI>http://localhost:8084/OBDws/json</restURI>
            <restInputReferNode>
                <xsd:element name="Parameters">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Query">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="licence" type="xsd:string"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Header" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                            <xsd:element name="Body" minOccurs="0">
                                <xsd:complexType>
                                    <xsd:sequence>
                                        <xsd:element name="Form" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="param" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Text" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:string" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Binary" minOccurs="0">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" type="xsd:base64Binary" minOccurs="0"/>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element name="Multipart" minOccurs="0" maxOccurs="unbounded">
                                            <xsd:complexType>
                                                <xsd:sequence>
                                                    <xsd:element name="content-disposition" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="name" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="filename" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-type" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content-id" type="xsd:string" minOccurs="0"/>
                                                    <xsd:element name="content" minOccurs="0">
                                                        <xsd:complexType>
                                                            <xsd:choice>
                                                                <xsd:element name="binary" type="xsd:base64Binary"/>
                                                                <xsd:element name="text" type="xsd:string"/>
                                                                <xsd:element name="fileName" type="xsd:string"/>
                                                            </xsd:choice>
                                                        </xsd:complexType>
                                                    </xsd:element>
                                                </xsd:sequence>
                                            </xsd:complexType>
                                        </xsd:element>
                                    </xsd:sequence>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restInputReferNode>
            <restOutputReferNode>
                <xsd:element name="header">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Server" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Allow" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Date" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Range" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Last-Modifie" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </restOutputReferNode>
        </config>
        <pd:inputBindings>
            <ns:ActivityInput>
                <ns:Parameters>
                    <Query>
                        <licence>
                            <xsl:value-of select="$Parse-Application-form/application/licencePlate"/>
                        </licence>
                    </Query>
                </ns:Parameters>
            </ns:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Parse Application form">
        <pd:type>com.tibco.plugin.xml.XMLParseActivity</pd:type>
        <pd:resourceType>ae.activities.XMLParseActivity</pd:resourceType>
        <pd:x>210</pd:x>
        <pd:y>210</pd:y>
        <config>
            <inputStyle>text</inputStyle>
            <xsdVersion>default</xsdVersion>
            <validateOutput>true</validateOutput>
            <term ref="pfx3:application"/>
        </config>
        <pd:inputBindings>
            <xmlString>
                <xsl:value-of select="$Check-expire-candidates/pfx:ActivityOutput/Body"/>
            </xmlString>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="GetAssessmentResult">
        <pd:type>com.tibco.plugin.soap.SOAPSendReceiveActivity</pd:type>
        <pd:resourceType>ae.activities.SOAPSendReceiveUI</pd:resourceType>
        <pd:x>663</pd:x>
        <pd:y>213</pd:y>
        <config>
            <timeout>10</timeout>
            <soapAttachmentStyle>SwA</soapAttachmentStyle>
            <timeoutType>Seconds</timeoutType>
            <service>pfx4:GetAssessmentResult</service>
            <servicePort>GetAssessmentResultHttpSoap11Endpoint</servicePort>
            <operation>generate</operation>
            <soapAction>urn:generate</soapAction>
            <endpointURL>http://localhost:8080/axis2/services/GetAssessmentResult.GetAssessmentResultHttpSoap11Endpoint/</endpointURL>
            <authScheme>NONE</authScheme>
        </config>
        <pd:inputBindings>
            <inputMessage>
                <pfx4:generate>
                    <args0>
                        <xsl:value-of select="$Parse-offence-result/ns:ActivityOutputClass/root/result"/>
                    </args0>
                    <args1>
                        <xsl:value-of select="$Parse-Driving-Logs/ns:ActivityOutputClass/root/result"/>
                    </args1>
                </pfx4:generate>
            </inputMessage>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Eligible queue sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>980</pd:x>
        <pd:y>128</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>q.eligible</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Integration Middleware/AESchemas/JMS-Connection-to-external database.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <Body>
                    <xsl:value-of select="$Render-Assessment-result/xmlString"/>
                </Body>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render Assessment result">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>801</pd:x>
        <pd:y>221</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <term ref="pfx5:modified_application"/>
        </config>
        <pd:inputBindings>
            <modified_application>
                <nric>
                    <xsl:value-of select="$Parse-Application-form/application/nric"/>
                </nric>
                <licencePlate>
                    <xsl:value-of select="$Parse-Application-form/application/licencePlate"/>
                </licencePlate>
                <name>
                    <xsl:value-of select="$Parse-Application-form/application/name"/>
                </name>
                <vehicleType>
                    <xsl:value-of select="$Parse-Application-form/application/vehicleType"/>
                </vehicleType>
                <currentPremium>
                    <xsl:value-of select="$Parse-Application-form/application/currentPremium"/>
                </currentPremium>
                <startDate>
                    <xsl:value-of select="$Parse-Application-form/application/startDate"/>
                </startDate>
                <endDate>
                    <xsl:value-of select="$Parse-Application-form/application/endDate"/>
                </endDate>
                <drivingTier>
                    <xsl:value-of select="$Parse-Application-form/application/drivingTier"/>
                </drivingTier>
                <assesmentResult>
                    <xsl:value-of select="$GetAssessmentResult/outputMessage/pfx4:generateResponse/return"/>
                </assesmentResult>
                <email>
                    <xsl:value-of select="$Parse-Application-form/application/email"/>
                </email>
            </modified_application>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Uneligible queue sender">
        <pd:type>com.tibco.plugin.jms.JMSQueueSendActivity</pd:type>
        <pd:resourceType>ae.activities.JMSQueueSendActivity</pd:resourceType>
        <pd:x>984</pd:x>
        <pd:y>306</pd:y>
        <config>
            <PermittedMessageType>Text</PermittedMessageType>
            <SessionAttributes>
                <transacted>false</transacted>
                <acknowledgeMode>1</acknowledgeMode>
                <maxSessions>1</maxSessions>
                <destination>q.uneligible</destination>
            </SessionAttributes>
            <ConfigurableHeaders>
                <JMSDeliveryMode>PERSISTENT</JMSDeliveryMode>
                <JMSExpiration>0</JMSExpiration>
                <JMSPriority>4</JMSPriority>
            </ConfigurableHeaders>
            <ConnectionReference>/Integration Middleware/AESchemas/JMS-Connection-to-external database.sharedjmscon</ConnectionReference>
        </config>
        <pd:inputBindings>
            <pfx:ActivityInput>
                <Body>
                    <xsl:value-of select="$Render-Assessment-result/xmlString"/>
                </Body>
            </pfx:ActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>Check expire candidates</pd:from>
        <pd:to>Parse Application form</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Application form</pd:from>
        <pd:to>Invoke REST API(Send HTTP Request to LTA)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Application form</pd:from>
        <pd:to>Invoke REST API (OBD ws)</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke REST API(Send HTTP Request to LTA)</pd:from>
        <pd:to>Parse offence result</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse offence result</pd:from>
        <pd:to>GetAssessmentResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Invoke REST API (OBD ws)</pd:from>
        <pd:to>Parse Driving Logs</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Parse Driving Logs</pd:from>
        <pd:to>GetAssessmentResult</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>GetAssessmentResult</pd:from>
        <pd:to>Render Assessment result</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render Assessment result</pd:from>
        <pd:to>Eligible queue sender</pd:to>
        <pd:xpathDescription>pass assessment</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>$GetAssessmentResult/outputMessage/pfx4:generateResponse/return = 'average' or $GetAssessmentResult/outputMessage/pfx4:generateResponse/return = 'pass'</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Render Assessment result</pd:from>
        <pd:to>Uneligible queue sender</pd:to>
        <pd:xpathDescription>fail assessment</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>'fail' = $GetAssessmentResult/outputMessage/pfx4:generateResponse/return</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Eligible queue sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Uneligible queue sender</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>